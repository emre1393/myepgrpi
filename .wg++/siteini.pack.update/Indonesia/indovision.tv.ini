**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: indovision.tv
* @MinSWversion: 1.1.1/54
* @Revision 3 - [03/09/2015] Francis De Paemeleere
*	  - new site implementation
* @Remarks:
* @header_end
**------------------------------------------------------------------------------------------------
site {url=indovision.tv|timezone=Asia/Jakarta|maxdays=30|cultureinfo=id-ID|charset=ISO-8859-1|titlematchfactor=90|episodesystem=xmltv_ns}
site {compression=gzip}

url_index{url|https://www.indovision.tv/schedule/table}
urldate.format {datestring|yyyy-MM-dd}
url_index.headers {method=POST}
url_index.headers {referer=https://www.indovision.tv/schedule/table}
url_index.headers {postdata=search_model=channel&aformelement1=aformelement&fdate='urldate'&fchannel='channel'&submit=Search}

index_showsplit.scrub {multi|class="schedule_table"|<tr valign="top">|</tr>|</table>}
index_urlchannellogo {url||<tbody>|<IMG SRC='|' alt=|/>}

index_start.scrub {regex||<td align="center" valign="top">(\d{2}:\d{2})</td>||}
index_duration.scrub {regex||<td>(\d{2}:\d{2})</td>||}
index_title.scrub {regex||</td>(.*?)</td>||}

index_urlshow.scrub {regex||<a href="([^\"]*)||}
index_title.modify {remove(type=regex)|<[^>]*>}

* get the episode info from the end of the title
index_temp_3.modify {clear}
index_temp_3.modify {substring(type=regex 'index_temp_3'="")|'index_title' "(S\s*\d*\s*,\s*[Ee][Pp]\s*\d*\s*:.*)$"}
index_temp_3.modify {substring(type=regex 'index_temp_3'="")|'index_title' "([Ee][Pp]\s*\d*\s*:.*)$"}
index_temp_3.modify {substring(type=regex 'index_temp_3'="")|'index_title' "(S\s*\d*\s*:.*)$"}
index_temp_3.modify {substring(type=regex 'index_temp_3'="")|'index_title' "(S\s*\d*\s*,\s*[Ee][Pp]\s*\d*\s*)$"}
index_temp_3.modify {substring(type=regex 'index_temp_3'="")|'index_title' "([Ee][Pp]\s*\d*\s*$)"}

*remove the episode info fromt the title
index_title.modify {remove(type=regex)|"(S\s*\d*\s*,\s*[Ee][Pp]\s*\d*\s*:.*)$"}
index_title.modify {remove(type=regex)|"([Ee][Pp]\s*\d*\s*:.*)$"}
index_title.modify {remove(type=regex)|"(S\s*\d*\s*:.*)$"}
index_title.modify {remove(type=regex)|"(S\s*\d*\s*,\s*[Ee][Pp]\s*\d*\s*)$"}
index_title.modify {remove(type=regex)|"([Ee][Pp]\s*\d*\s*$)"}
index_title.modify {remove(type=regex)|",\s*$"} * remove trailing comma, after removing episode info

* extract the subtitle from the grabbed episode info (if any)
index_subtitle.modify {substring(type=regex 'index_subtitle'="")|'index_temp_3' "S\s*\d*\s*,\s*[Ee][Pp]\s*\d*\s*:\s*(.*)\s*$"}
index_subtitle.modify {substring(type=regex 'index_subtitle'="")|'index_temp_3' "[Ee][Pp]\s*\d*\s*:\s*(.*)\s*$"}
index_subtitle.modify {substring(type=regex 'index_subtitle'="")|'index_temp_3' "S\s*\d*\s*:\s*(.*)\s*$"}

* extract the season and episode from the grabbed episode info (if any)
index_temp_1.modify {substring(type=regex)|'index_temp_3' "S\s*(\d*)"}
index_temp_2.modify {substring(type=regex)|'index_temp_3' "[Ee][Pp]\s*(\d*)"}

* index_temp_1 = season
* index_temp_2 = episode
index_temp_1.modify {calculate(not="" format=F0)|1 -}
index_temp_2.modify {calculate(not="" format=F0)|1 -}
index_episode.modify {clear}
index_episode.modify {addend('index_temp_1' not="")|'index_temp_1'}
index_episode.modify {addend|.}
index_episode.modify {addend('index_temp_2' not="")|'index_temp_2'}
index_episode.modify {addend|.}
index_episode.modify {clear(="..")}


title.scrub {regex||class='subpage_title highlight_title'[^>]*>([^<]*)</||}
description.scrub {regex||class='highlight_synopsis'[^>]*>([^<]*)</||}

title.modify {remove(type=regex)|<[^>]*>}

*remove the episode info fromt the title
title.modify {remove(type=regex)|"(S\s*\d*\s*,\s*[Ee][Pp]\s*\d*\s*:.*)$"}
title.modify {remove(type=regex)|"([Ee][Pp]\s*\d*\s*:.*)$"}
title.modify {remove(type=regex)|"(S\s*\d*\s*:.*)$"}
title.modify {remove(type=regex)|"(S\s*\d*\s*,\s*[Ee][Pp]\s*\d*\s*)$"}
title.modify {remove(type=regex)|"([Ee][Pp]\s*\d*\s*$)"}
title.modify {remove(type=regex)|",\s*$"} * remove trailing comma, after removing episode info

description.modify {replace|<hr/>|\n} * alternative: places other language on a new line

**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*url_index.headers {method=POST}
*url_index.headers {referer=https://www.indovision.tv/schedule/table}
*url_index.headers {postdata=search_model=channel&aformelement1=aformelement&fdate='urldate'&fchannel=7&submit=Search}
*index_site_id.scrub {regex||^.*?<select[^>]*name=\"fchannel\"[^>]*>\s*(<option[^>]*value=\".*?\"[^>]*>.*?</option>\s*)*||}
*scope.range {(channellist)|end}
*index_site_channel.modify {addstart|'index_site_id'}
*index_site_channel.modify {substring(type=regex)|<option[^>]*value=\".+?\"[^>]*>\s*(.+?)\s*</option>}
*index_site_channel.modify {replace(type=regex)|\s{1,}| }
*index_site_id.modify {substring(type=regex)|<option[^>]*value=\"(.+?)\"[^>]*>.+?</option>}
*index_site_id.modify {cleanup(removeduplicates=equal,100 link="index_site_channel")}
*end_scope
** @auto_xml_channel_end
