﻿**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: vodafone.de
* @MinSWversion: V2.0
* @Revision 1 - [11/05/2017] Blackbear199
*  - season/episode fix\
*  - fix only grabs 1 day
* @Revision 0 - [22/09/2016] Blackbear199
*  - creation
* @Remarks:
* @header_end
**------------------------------------------------------------------------------------------------
site {url=vodafone.de|timezone=Europe/Berlin|maxdays=14.1|cultureinfo=de-DE|charset=UTF-8|titlematchfactor=90}
site {ratingsystem=DE|episodesystem=onscreen|nopageoverlaps}
*
url_index{url|https://tv-manager.vodafone.de/tv-manager/backend/auth-service/proxy/epg-data-service/epg/tv/data/period/|channel|/##start##T00:00:00/##stop##T23:59:00}
url_index.headers {customheader=Accept-Encoding=gzip,deflate}
urldate.format {datestring|yyyy-MM-dd}
*
scope.range{(urlindex)|end}
index_variable_element.modify {calculate(format=F1)|'config_timespan_days' 1 +}
index_variable_element.modify {calculate(format=timespan,days)}
index_temp_1.modify {calculate(format=date,yyyy-MM-dd)|'urldate'}
index_temp_2.modify {calculate(format=date,yyyy-MM-dd)|'urldate' 'index_variable_element' +}
url_index.modify {replace|##start##|'index_temp_1'}
url_index.modify {replace|##stop##|'index_temp_2'}
end_scope
*
index_showsplit.scrub {multi|"end_date_ger"|||}
*
scope.range{(splitindex)|end}
index_showsplit.modify {sort(ascending,string)}
sort_by.scrub {single(target="index_showsplit")|"start_date_time":"||",|",}
sort_by.modify {calculate(target'index_showsplit" format=date,unix)}
end_scope
*
index_variable_element.modify {set|'config_site_id'}
index_urlchannellogo.modify {set|https://tv-manager.vodafone.de/tv-manager/backend/epg_images_channels/'index_variable_element'.png}
*
scope.range{(indexshowdetails)|end}
index_start.scrub {single|"start_date_time":"||"|"}
index_stop.scrub {single|"end_date_time":"||"|"}
index_title.scrub {single|"title":"||"|"}
*
index_urlshow {url|https://tv-manager.vodafone.de/tv-manager/backend/auth-service/proxy/epg-data-service/epg/tv/data/item/|"id":"||"|"}
index_urlshow.headers {customheader=Accept-Encoding=gzip,deflate}
index_variable_element.modify {set|'index_temp_2'}
end_scope
*
scope.range{(showdetails)|end}
title.scrub {single|"title":"||"|"}
description.scrub {single|{"kind":"text","text":"||"}|"}}
director.scrub {multi|"person_director":[|"name":"|"}|]}
actor.scrub {multi|"person_actor":[|"name":"|"}|]}
presenter.scrub {multi(include="\"host\"")|"person":[|{|}|]}
producer.scrub {multi|"person_producer":[|"name":"|"}|]}
writer.scrub {multi(include="\"screenwriter\"")|"person":[|{|}|]}
composer.scrub {multi|"person_music":[|"name":"|"}|]}
category.scrub {multi|"category_genre":[|"text":"|"|]}
productiondate.scrub {single|"production_year":"||"|"}
country.scrub {single|"country":"||"|"}
episode.scrub {regex(pattern="relay:'S1',series_count:'Et1',series_number:'E1'")||\"relay\":\"\d+\",\"series_count\":\"\d+\",\"series_number\":\"\d+\"||}
episode.modify {remove|"}
videoaspect.scrub {single|"attribute_169":"||"|"}
videoaspect.modify {replace|true|16x9}
subtitles.scrub {single|"attribute_subtitle":"||"|"}
showicon.scrub {single|"image_name":"||"|"}
showicon.modify {addstart(not "")|http://kbde.tmsimg.com/}
*
director.modify {cleanup(style=jsondecode)}
actor.modify {cleanup(style=jsondecode)}
producer.modify {cleanup(style=jsondecode)}
composer.modify {cleanup(style=jsondecode)}
presenter.modify {substring(type=regex)|"\"name\":\"([^\"]*)\"$"}
writer.modify {substring(type=regex)|"\"name\":\"([^\"]*)\"$"}
writer.modify {cleanup(style=jsondecode)}
presenter.modify {cleanup(style=jsondecode)}
end_scope
*
**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*url_index {url|https://tv-manager.vodafone.de/tv-manager/backend/auth-service/proxy/epg-data-service/epg/tv/channels}
*index_site_id.scrub {multi|"tvtvid":"||"|"}
*index_site_channel.scrub {multi|"lname":"||"|"}
*index_site_id.modify {cleanup(removeduplicates=equal,100 link="index_site_channel")}
** @auto_xml_channel_end
