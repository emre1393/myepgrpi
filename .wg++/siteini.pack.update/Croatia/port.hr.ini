**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: port.hr
* @MinSWversion: V1.1.1/56.27
* @Revision 13 - [06/07/2016] Blackbear199
* site changes
* @Revision 12 - [10/12/2014] Jan van Straaten
* completed index_subtitle
* @Revision 11 - [27/11/2014] Jan van Straaten
* reverted to the rev 7 url's. Changed timezone, new channel list, corrected small error in presenter, removed firstshow=now
* @Revision 10 - [14/11/2013] Francis De Paemeleere
* @Remarks:
*  the api based epg doesn't exist as used for the othe port sites .
* @header_end
**------------------------------------------------------------------------------------------------

site {url=port.hr|timezone=Europe/Zagreb|maxdays=11.1|cultureinfo=hr-HR|charset=iso-8859-2|titlematchfactor=90|ratingsystem=HR|episodesystem=onscreen}
url_index{url|http://port.hr/pls/w/tv.channel?i_date=|urldate|&i_ch=|channel|&i_xday=4}
url_index.headers {customheader=Accept-Encoding=gzip,deflate}
urldate.format {datestring|yyyy-MM-dd}
*
index_urlchannellogo {url(scope=datelogo)||<img style="border:0px" src="||"|"}
*
index_showsplit.scrub {multi(sort@04:00,20:00)|<td class="time_container"||</tr>|</tr>}
*
index_start.scrub {regex||<div class="(?:lb)?btxt"[^>]*padding:0px">(\d{1,2}:\d{2})<||}
index_title.scrub {regex||class="(?:lb)?btxt">(.+?)</a>||}
index_subtitle.scrub {single(separator=" - " include=last)|<span class="btxt">||</span>|</span>}
index_subtitle.modify {remove(type=regex)|"\A\s*?-\s"}
index_description.scrub {multi(include="blackouted")|<span class="mtxt"> ||</span>| </span>}
*
index_urlshow {url||<a onclick=|href="|" |class="btxt">}
index_urlshow.headers {customheader=Accept-Encoding=gzip,deflate}
*
scope.range{(showdetails)|end}
title.scrub {single|<div style="text-align:center">|class="blackbigtitle">|</h1>|</td}
titleoriginal.scrub {single|<h2 style="margin-top:|class="txt">(|)</h2>|</td>}
description.scrub {single(separator="<br/><br/><strong>" include=first)|<div id="text_articol">|<span class="txt">|</span>|</div>}
showicon.scrub {single|<meta property="og:image" content="||"|"}

actor.scrub 	{regex||>(?:cast\|uloge\|szereplő\(k\)\|Distribuţia\|herec)\:(.*?)(?:</div>\|<span class="btxt">)||}
director.scrub 	{regex||>(?:director\|redatelj\|reditelj\|rendező\|regizor\|réžia\|režie)\:(.*?)(?:</div>\|<span class="btxt">)||}
composer.scrub 	{regex||>(?:composer\|scenario\|skladatelj)\:(.*?)(?:</div>\|<span class="btxt">)||}
producer.scrub 	{regex||>(?:producer\|producent)\:(.*?)(?:</div>\|<span class="btxt">)||}
presenter.scrub	{regex||>(?:presenter\|predstavljača\|predstavljaca\|műsorvezető\|prezentator\|moderátor\|voditelj emisije)\:(.*?)(?:</div>\|<span class="btxt">)||}
writer.scrub 	{multi|urednik:|target="_top">|</a>|<br />}
*
temp_1.scrub {single(separator=", " exclude="minuta")|<td valign="top" width="98%">|<span class="txt">|</span>|</td>}

temp_1.modify {remove(type=regex)|"<span class=\"btxt\">.*$"}
temp_1.modify {cleanup(tags="<a  href=""</a>")}
temp_1.modify {cleanup(tags="<"">")}
*
temp_2.modify {calculate(format=F0 type=element)|'temp_1' #}
*
*category,country,episode,year
temp_3.modify {set('temp_2' "4")|0}
temp_4.modify {set('temp_2' "4")|1}
temp_5.modify {set('temp_2' "4")|2}
temp_6.modify {set('temp_2' "4")|3}
*
*category,country,year
temp_3.modify {set('temp_2' "3")|0}
temp_4.modify {set('temp_2' "3")|1}
temp_5.modify {set('temp_2' "3")|99}
temp_6.modify {set('temp_2' "3")|2}
*
*category,country
temp_3.modify {set('temp_2' "2")|0}
temp_4.modify {set('temp_2' "2")|1}
temp_5.modify {set('temp_2' "2")|99}
temp_6.modify {set('temp_2' "2")|99}
*
category.modify {substring(type=element)|'temp_1' 'temp_3' 1}
*
country.modify {substring(type=element)|'temp_1' 'temp_4' 1}
country.modify {replace|/|\|}
*
episode.modify {substring(type=element pattern="'E1'. epizoda/'Et1'")|'temp_1' 'temp_5' 1}
episode.modify {clear('temp_5' "99")}
*
productiondate.modify {substring(type=element)|'temp_1' 'temp_6' 1}
productiondate.modify {clear('temp_6' "99")}
productiondate.modify {substring("" type=regex)|'country' "\d{4}"}
country.modify {clear('productiondate')}
*
rating.scrub {single|<td valign="top" width="98%">|<img alt="(|)"|<br/>}
rating.modify {replace|bez ogr.|0}
rating.modify {addend(not "")|+}
*
title.modify {addstart("")|'index_title'}
description.modify {cleanup(tags="<"">")}
description.modify {remove|Opis epizode: }
*
actor.modify 		{replace|<br />|\|}
director.modify 	{replace|<br />|\|}
composer.modify 	{replace|<br />|\|}
producer.modify 	{replace|<br />|\|}
presenter.modify 	{replace|<br />|\|}
*
actor.modify 		{cleanup(tags="<"">")}
director.modify 	{cleanup(tags="<"">")}
composer.modify 	{cleanup(tags="<"">")}
producer.modify 	{cleanup(tags="<"">")}
presenter.modify	{cleanup(tags="<"">")}
writer.modify		{cleanup}
*
actor.modify 		{remove(type=regex)|(\(.*?\))$}
director.modify 	{replace|,|\|}
composer.modify 	{replace|,|\|}
producer.modify 	{replace|,|\|}
presenter.modify 	{replace|,|\|}
end_scope
**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*url_index{url|http://port.hr/pls/tv/tv_xml.channels_xml?i_area_id=1}
*index_site_id.scrub {multi|<channel domain| id="|"|</channel>}
*index_site_channel.scrub {multi|<channel domain|<name>|</name>|</channel>}
*scope.range {(channellist)|end}
*index_site_id.modify {cleanup(removeduplicates=equal,100 link="index_site_channel")}
*end_scope
** @auto_xml_channel_end
