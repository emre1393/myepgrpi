**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: freeview.com.au
* @MinSWversion: V1.57
* @Revision 3 - [11/11/2016] Blackbear199
*     - change actor to multi value element
*     - add cleanup style=htmldecodespecialchar to title,subtitle,description
* @Revision 2 - [10/11/2016] Blackbear199
*     - added program type to category
*     - added option to have 2 digit season/episode,episodesystem=onscreen only
* @Revision 1 - [09/011/2016] Blackbear199
*     - added channels.xml creation,xlsx file needs to be converted to xml(online)
*     - added pattern to episode element,preferred episodesystem= can be set on site {...} line(onscreen or xmltv_ns)
* @Revision 0 - [09/11/2016] i286
*     - EPG scraper to suit NEW Freeview site from late October 2016
* @Remarks: Get channel list from http://freeviewcdn.azureedge.net/XML/config.xlsx
* @Remarks: Insert an additional column before column F
* @Remarks: In the new column, row 2 paste without square brackets [=SUBSTITUTE(SUBSTITUTE(A2,"0x",""),".","")] and expand down to end of spreadsheet data
* @Remarks: Then on 'Services' tab, filter column 'Region' and your site_id is the numbers from the column we created
* @Remarks: Example 'WebGrab++.config.xml' line '<channel update="f" site="freeview.com.au" site_id="101002110214" xmltv_id="ABC ME">ABC ME</channel>'
* @Remarks: Set <timespan>8</timespan> in 'WebGrab++.config.xml' as there is up to 9 days of EPG data available, when Freeview updates the listing
* @Remarks: Timezone needs to remain in UTC as that is how Freeview now provides the dates, do not change!
* @header_end
**------------------------------------------------------------------------------------------------
site {cultureinfo=en-AU|timezone=UTC|maxdays=9.1|charset=utf-8|titlematchfactor=90|episodesystem=onscreen|ratingsystem=AU}
url_index {url()|http://freeviewcdn.azureedge.net/XML/new_XML/listings_|channel|.xml}
url_index.headers {customheader=Accept-Encoding=gzip,deflate}
index_showsplit.scrub {regex||(?:<programme(.*?)</programme>)||} 											*split URL into individual episodes
*
index_start.scrub {regex(pattern="yyyy-MM-dd'T'HH:mm:ss'Z'")||<date_time_duration(?:.*?)(?:date_time_value="(.*?)"(?:.*?))*/>||}		*episode start time
index_duration.scrub {regex()||<date_time_duration(?:.*?)(?:duration="(.*?)"(?:.*?))*/>||}					*episode length
index_title.scrub {regex()||<series(?:.*?)(?:<title>(.*?)</title>(?:.*?))*</series>||}						*show name
index_title.modify {cleanup(style=htmldecodespecialchar)}												*remove production year from title
index_subtitle.scrub {regex()||<series(?:.*?)(?:<episode_title>(.*?)</episode_title>(?:.*?))*</series>||}	*episode name
index_subtitle.modify {cleanup(style=htmldecodespecialchar)}												*remove production year from title
index_description.scrub {regex()||(?:<synopsis>(.*?)</synopsis>(?:.*?))*<series||}							*episode description
index_actor.scrub {regex()||(?:<cast>(?:,?([^,]*))*</cast>)||}														*actors
index_rating.scrub {regex()||(?:classification="\((.*?)\)")||}												*parental guide rating
index_category.scrub {single|program_type="||"|"}
index_category.scrub {single|genre="||"|"}
index_category.scrub {single|subgenre="||"|"}									*genre
index_category.modify {cleanup(style=name)}														*subgenre
index_productiondate.modify {substring(type=regex)|'index_description' "\ \((\w+)\)$"}						*production year
index_description.modify {remove(type=regex)|"(\ \(\w+\)$)"}
index_description.modify {cleanup(style=htmldecodespecialchar)}												*remove production year from title
*
*xmltv_ns episode format,can be converted to onscreen by changing episode system=onscreen on site {...} line
index_temp_1.scrub {regex()||<series(?:.*?)(?:season_number="(.*?)"(?:.*?))*>||}
index_temp_1.modify {remove(type=regex)|\d{4}}							*season number
index_temp_1.modify {calculate(not "" format=F0)|1 -}
index_temp_1.modify {set('index_temp_1' "")|-1}
index_temp_1.modify {addend|.}
index_episode.scrub {regex()||<series(?:.*?)(?:episode_number="(.*?)"(?:.*?))*>||}							*episode number
index_episode.modify {calculate(not "" format=F0)|1 -}
index_episode.modify {addend('index_episode' not "")|.}
index_episode.modify {addstart('index_episode' not "" pattern="'S0'.'E0'"".'E0'")|'index_temp_1'}
*
* 2 digit season/episode added to beginning of subtitle episodesystem=onscreen only
*index_temp_1.scrub {single|season_number="||"|"}
*index_temp_1.modify {clear("0")} *erase if season number is zero
*index_temp_1.modify {remove(type=regex)|\d{4}} *erase if season number is 4 digits(year)
*index_temp_3.modify {calculate('index_temp_1' not "" type=char format=F0)|'index_temp_1' #}
*index_temp_1.modify {addstart('index_temp_3' "1")|0}
*index_temp_1.modify {addstart('index_temp_1' not "")|S}
*index_temp_2.scrub {single|episode_number="||"|"}
*index_temp_4.modify {calculate('index_temp_2' not "" type=char format=F0)|'index_temp_2' #}
*index_temp_2.modify {addstart('index_temp_4' "1")|0}
*index_temp_2.modify {addstart('index_temp_2' not "")|E}
*index_temp_2.modify {addstart|'index_temp_1'}
*index_subtitle.modify {addstart('index_temp_2' not "")|'index_temp_2' }
*
**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*url_index {url|file:///home/mike/Downloads/WebGrab+Plus/config_test.xml}
*scope.range{(channellist)|end}
*index_site_id.scrub {regex||<Data ss:Type="String">0x([^\.]*\.0x\d[^\.]*\.0x[^\<]*)</Data>||}
*index_site_id.modify {remove|.0x}
*index_site_channel.scrub {multi(include=6)|<Row ss:|<Data ss:Type="String">|</Data>|</Row>}
*index_site_channel.modify {remove(type=element)|0 1}
*index_temp_9.scrub {multi(include=4)|<Row ss:|<Data ss:Type="String">|</Data>|</Row>}
*index_temp_9.modify {remove(type=element)|0 1}
*index_temp_1.modify {set|0}
*loop {(each "index_temp_8" in 'index_site_id')|end}
*index_temp_7.modify {substring(type=element)|'index_site_channel' 'index_temp_1' 1}
*index_temp_6.modify {substring(type=element)|'index_temp_9' 'index_temp_1' 1}
*index_temp_8.modify {addend| -- 'index_temp_7' - 'index_temp_6'}
*index_temp_5.modify {addend|'index_temp_8'#_#}
*index_temp_1.modify {calculate(format=F0)|1 +}
*end_loop
*index_site_id.modify {set|'index_temp_5'}
*index_site_id.modify {replace|#_#|\|}
*index_site_id.modify {remove(type=element)|-1 1}
*index_site_id.modify {sort(ascending,string)}
*sort_by.scrub {single(target="index_site_id")| -- |||}
*index_site_channel.modify {substring(type=regex)|'index_site_id' " -- (.*)$"}
*index_site_id.modify {substring(type=regex)|"^([^ -]*) --"}
*end_scope
*** @auto_xml_channel_end
