**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: meuguia.tv
* @MinSWversion:
* @Revision  3 - [13/06/2016] Blackbear199
* fix category scrub,disabled 1 subtitle scrub(gets bad data)
* @Revision  2 - [29/04/2016] 1NSdbZVbpZDX
* general fix update due to site page changes
* @Revision  1 - [08/04/2016] 1NSdbZVbpZDX
* fixed incremental grab, added more subtitles
* episode grab correction and many more!
* @Revision 0 - [22/12/2015] 1NSdbZVbpZDX
*   - creation
* @Remarks:
* @header_end
**------------------------------------------------------------------------------------------------

site {url=meuguia.tv|timezone=Brazil/East|maxdays=17.1|cultureinfo=pt-BR|charset=utf-8|titlematchfactor=90}|nopageoverlaps|firstshow=0}
*site {ratingsystem=ES|episodesystem=onscreen|grabengine=|firstshow=0|firstday=0000000}

urldate.format {daycounter|0}

url_index{url|http://meuguia.tv/programacao/|channel|}
url_index.headers {customheader=Accept-Encoding=gzip,deflate}     

index_showsplit.scrub {multi(debug)|class="home">|<a |</a>|</li>}

index_start.scrub {single|prog_comp_data'>||</div>|}
index_start.modify {replace|h|:}
index_title.scrub {single (separator=": " include=first)|title=|"|"|}
index_category.scrub {single(separator="/")|metadados'>||</div>|</div>}

scope.range {(indexshowdetails)|end}
index_urlshow.headers {customheader=Accept-Encoding=gzip,deflate}     
index_urlshow {url|http://meuguia.tv|href="||">|}
end_scope
*
scope.range {(showdetails)|end}
title.scrub {single(separator=": " include=first)|class="tit">||</span>|}
titleoriginal.scrub {single(separator=": " include=first)|tit_orig">||</span>|}
titleoriginal.modify {clear('title')}
subtitle.scrub {single(separator=": " exclude=first)|class="tit">||</span>|}
*subtitle.scrub {single('subtitle' "")|Season|: |</span>|<span class="}
subtitle.modify {remove(type=regex) |(#eee.*)}
subtitle.modify {remove(type=regex) |(\).*)}
description.scrub {single|var str="||";|} 
director.scrub {single(separator=", ")|Direção:</strong><br />||</span>|}
actor.scrub {multi(separator=", ")|Elenco:</strong><br />||</span>|}
episode.scrub {single|tit_orig">|Season|:|</span>}
episode.modify {remove|</span>Season}
episode.modify {addstart(notnull)|S.}
episode.modify {replace | - Ep. |-Ep.}
productiondate.scrub {single|<span class="small_data">||</span>|}
*country.scrub {regex (debug)||\|(.*?)\n\s*\(\d{4}\)\n\s*<\/span>||}
country.scrub {single |small_data">|mins|\(|</span>}
country.modify {remove |</span>mins}
country.modify {remove (type=regex)|(\(\d{4}\))}
country.modify {replace |\||}
*presenter.scrub {single|}
*producer.scrub {single|}
*writer.scrub {single|}
*composer.scrub {single|}
*rating.scrub {multi|}
*ratingicon.scrub {multi|}
*category.scrub {single|}
*starrating.scrub {single|}
*episode.scrub {single|}
*subtitles.scrub {single|}
*premiere.scrub {single|}
*previousshown.scrub {single|}
end_scope
*
* operations:

**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*url_index{url|http://meuguia.tv/programacao/categoria/Todos}
*index_site_channel.scrub {multi(debug)|</strong>| \| |</span>|</a>}
*index_site_channel.modify {addend| [Brazil]}
*index_site_id.scrub {multi|programacao/||"|}
*scope.range {(channellist)|end}
*index_site_id.modify {cleanup(removeduplicates=equal,100 link="index_site_channel")}
*end_scope
** @auto_xml_channel_end
