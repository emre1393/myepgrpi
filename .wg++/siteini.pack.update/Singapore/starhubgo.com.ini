﻿﻿**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: starhubgo.com
* @MinSWversion: V1.57
* @Revision 2 - [25/11/2016] Blackbear199
*  - site changes
* @Revision 1 - [09/10/2016] Blackbear199
*  - site changes
* @Revision 0 - [18/04/2016] Blackbear199
*  - creation
* @Remarks:
* @header_end
**------------------------------------------------------------------------------------------------
site {url=starhubgo.com|timezone=UTC|maxdays=7|cultureinfo=en-GB|charset=UTF-8|titlematchfactor=90}
site {ratingsystem=GB|episodesystem=onscreen}
url_index{url|https://www.starhubgo.com/live/getLiveChannelPrograms?pCode=V4bmQyOqnbswtz9daXLyKFGCO8Zp&channelIds=[%22|channel|%22]&startTime=##start_date##T04:00:00.000Z&endTime=##end_date##T04:00:00.000Z&pageSize=8000&localDate=##start_date##&requestQuery=multiasset}
*
urldate.format {datestring|yyyy-MM-dd}
*
scope.range{(urlindex)|end}
index_variable_element.modify {set|1.0}
index_variable_element.modify {calculate(format=timespan,days)}
index_temp_1.modify {calculate(format=date,yyyy-MM-dd)|'urldate'}
index_temp_2.modify {calculate(format=date,yyyy-MM-dd)|'urldate' 'index_variable_element' +}
url_index.modify {replace|##start_date##|'index_temp_1'}
url_index.modify {replace|##end_date##|'index_temp_2'}
end_scope
*
index_showsplit.scrub {regex||\{"id":.*?"\d+ Mins"\}||}
*
index_start.scrub {single|"program_start_time":"||.000Z"|.000Z"}
index_duration.scrub {single|"durationInSec":||,|,}
index_duration.modify {calculate(format=F0)|60 /}
index_title.scrub {single|"name":"||","|","}
index_subtitle.scrub {single|"episode_title":"||","|","} 
*
index_description.scrub {multi|"description":"||","|","} 
*
index_category.scrub {single(separator=" ")|"genre":"||"|"}
index_category.scrub {single(separator=" ")|"subgenre":"||"|"}
*
index_temp_1.modify {substring(type=regex)|'index_title' "[^>]*\((S\d+)\)"} *season from index_title
index_episode.scrub {single|"episode_number":||,|,}
index_episode.modify {addstart('index_episode' not "")|E}
index_episode.modify {addstart('index_temp_1' not "")|'index_temp_1'}
index_episode.modify {substring(type=regex pattern="S'S1'E'E1'""S'S1'""E'E1'")|"^.*$"}
*
index_title.modify {remove(type=regex)|\(S\d+\)}
index_title.modify {remove|\}
index_subtitle.modify {remove|\}
index_description.modify {remove|\}
index_episode.modify {remove|\}
index_category.modify {remove|\}
index_category.modify {remove|;}
index_category.modify {cleanup(removeduplicates=equal,100)}
*
**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
*
* enable Section 1 and run webgrab,copy the <channels...</channels> line from the starhuggo.com.channels.xml to your
* webgrab++.config.xml(overwrite the existing dummy entry).disable Section1 and enable Section 2.
* run webgrab again and a full channels.xml will be generated.
*
**********************************
* Section 1                      *
**********************************
** @auto_xml_channel_start
*url_index{url|https://www.starhubgo.com/live/getLiveChannelsByFiltering?pCode=V4bmQyOqnbswtz9daXLyKFGCO8Zp&filterGenreID=Channel_|subpage|&requestQuery=labels}
*subpage.format {list|INTERNATIONAL|SPORTS|KIDS1|EDUCATION1|ENTERTAINMENT1|MOVIES1|NEWS1|CHINESE1}
*scope.range{(channellist)|end}
*index_site_id.scrub {multi(separator=",")|{"channelIds":[||]}|]}}
*index_site_id.modify {replace|\||,}
*index_site_channel.modify {addstart|All Channels}
*end_scope
**********************************
* Section 2                      *
**********************************
*url_index{url|https://www.starhubgo.com/live/getLiveChannelsByIDs?pCode=V4bmQyOqnbswtz9daXLyKFGCO8Zp&channelIds=[|channel|]&fromDetailspage=undefined&requestQuery=channels}
*scope.range{(channellist)|end}
*index_site_id.scrub {regex||"id":"(\d*)","name":"\[\d*\]_.+?"||}
*index_site_channel.scrub {regex||"id":"\d*","name":"\[\d*\]_(.+?)"||}
*index_site_id.modify {cleanup(removeduplicates=equal,100 link="index_site_channel")}
*end_scope
** @auto_xml_channel_end

