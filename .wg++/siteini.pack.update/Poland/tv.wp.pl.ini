**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: tv.wp.pl
* @MinSWversion: V1.1.1/55.27
*   none
* @Revision 7 - [08/11/2015] Jan van Straaten
*   small change in urlshow , added channellist
* @Revision 6 - [01/07/2012] Jan van Straaten/Porek388
*   completely new, site change
* @Revision 5 - [10/02/2012] porek388
*   added duration, changed title + various other changes 
* @Revision 4 - [] 
*   change in description
* @Revision 3 - [] 
*   adapted for 1.0.9
* @Revision 2 - [] 
*   small change in description
* @Remarks:
*   none
* @header_end
**------------------------------------------------------------------------------------------------

site {url=tv.wp.pl|timezone=Europe/Warsaw|maxdays=7.1|cultureinfo=pl-PL|charset=utf-8|titlematchfactor=60}
site {episodesystem=onscreen}
url_index{url()|http://tv.wp.pl/program.html?stid=|channel}
* the index page is arranged in hour rows, in it 14 day-columns starting on the day a week ago , each containing the shows of that hour
* the showsplit scrub return all the hour columns
index_showsplit.scrub {multi(exclude="<a href=\"http://")|<div class="hour">|<div class="col">||}
*
scope.range {(splitindex)|end}
index_temp_6.modify {addstart()|'index_showsplit'}
index_temp_1.modify {calculate(type=element format=F0)|'index_temp_6' #} * number of rows (containing the shows of each hour)
index_showsplit.modify {remove(type=element)|0 'index_temp_1'} * clear to fill in the loop
index_temp_2.modify {addstart|7} * startvalue of first column
index_temp_3.modify {addstart|'index_temp_2'} *will contain the index of the column to add to index_showsplit
loop {('index_temp_2' < "14" max=500)|end}
index_temp_4.modify {substring(type=element)|'index_temp_6' 'index_temp_3' 1} * get the column
index_showsplit.modify {addend()|'index_temp_4'&&&&} * add to indexshowsplit with a dummy element separator &&&&
index_temp_3.modify {calculate(format=F0)|14 +} * index of the next column (14 days 'later')
index_temp_2.modify {calculate('index_temp_3' > 'index_temp_1' format=F0)|1 +} *start index of the first column for the next day
index_temp_3.modify {replace('index_temp_3' > 'index_temp_1')|'index_temp_3'|'index_temp_2'} * index first column of next day
end_loop.range
index_showsplit.modify {replace|&&&&|\|} * restore multi
index_showsplit.modify {replace|</div><div class="prog"|\|<div class="prog"} * split the invidual shows if more than 1 in a collomn
index_showsplit.modify {remove("</div>")|</div>} * remove the remains of empty columns
end_scope.range
index_start.scrub {single()|<div class="tm">||<|<}
index_title.scrub {single()|html" data-prid="|">|</a>|</h3>}
*
index_urlshow.scrub {url()|http://tv.wp.pl|<h3>|<a href="|" data-prid=|</a>}
*http://tv.wp.pl/name,Sto-tysiecy-bocianow,prid,24003803566,opis.html
title.scrub {single(separator=": " include=first)|<div id="programDetails">|<h1>|<span|<span}
subtitle.scrub {single(separator=": " exclude=first)|<div id="programDetails">|<h1>|<span|<span}
titleoriginal.scrub {single|<span class="pdData2">|(|)</span>|</span>}
description.scrub {single|<span class="txt">|<p>|</p>|</p>}
category.scrub {single(separator=", " include=2)|<span class="pdData3">||</span>|</span>}
productiondate.scrub {single|<span class="pdData3">||</span>|</span>}
director.scrub {multi|<span>reżyseria: </span>|">|</a>|</p>}
actor.scrub {multi|<span>wykonawcy: </span>|">|</a>|</p>}
rating.scrub {single|<span class="age|">|</span>|</h1>}
episode.scrub {single|<span class="pdData1">||<span class|<span class}
*
scope.range {(showdetails)|end}
title.modify {cleanup}
subtitle.modify {cleanup}
episode.modify {cleanup}
end_scope

**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*url_index {url()|http://tv.wp.pl/ajax-listakanalow.html}
*index_site_id.scrub {regex()||data-stid="(\d+?)">||}
*index_site_channel.scrub {regex()||data-stid="\d+?">(.+?)</a>||}
data-stid="184">Disney Channel</a>
*scope.range {(channellist)|end}
*index_site_id.modify {cleanup(removeduplicates=equal,100 link="index_site_channel")}
*end_scope
** @auto_xml_channel_end